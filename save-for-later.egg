; vim: ft=scheme
((author "siiky")
 (license "unlicense")
 (synopsis "")
 (version "0.0.0")
 (category net)
 (dependencies
   ipfs
   sql-de-lite
   srfi-1
   srfi-197)
 (test-dependencies
   cluckcheck
   srfi-1
   srfi-41
   srfi-197
   test)
 (component-options
   ;(csc-options "-O0" "-d3")
   ;(linkage static)
   )
 (components
   #;(program sfl-exe
            (source sfl.scm)
            (component-dependencies sfl-lib sfl.db.sqlite))

   (extension sfl.db.sqlite
              (types-file)
              (modules sfl.db.sqlite)
              (csc-options "-X" "sql-reader-syntax/sql-reader-syntax.scm")
              (source-dependencies
                "sql-reader-syntax/sql-reader-syntax.scm"
                "sql/entry.add.sql"
                "sql/entry.change-name.sql"
                "sql/entry.list.sql"
                "sql/entry.remove.sql"
                "sql/entry.set-consumed.sql"
                "sql/node.add.sql"
                "sql/node.list.sql"
                "sql/node.remove.sql"
                "sql/pin.add.sql"
                "sql/pin.list-cids.sql"
                "sql/pin.list-node.sql"
                "sql/pin.list.sql"
                "sql/pin.pinned-to-node.sql"
                "sql/pin.remove-cid-from-node.sql"
                "sql/pin.remove-cid.sql"
                "sql/pin.remove-node.sql"
                "sql/schema.entries.sql"
                "sql/schema.nodes.sql"
                "sql/schema.pins.sql"
                "sql/schema.sql"
                "sql/schema.types.sql"
                "sql/type.add.sql"
                "sql/type.remove.sql"
                ))

   (extension sfl
              (types-file)
              (modules sfl)
              (source sfl.scm))
   ))
